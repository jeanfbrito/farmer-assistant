version: 2
jobs:
  setup:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout

      - run: gem update --system
      - run: gem install bundler
      - run: gem install rubocop

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: bundle exec rake webpacker:compile
      - save_cache:
          key: webpack-{{ .Revision }}
          paths:
            - /home/circleci/project/public/packs-test/
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.3-node
        environment:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: root
          RAILS_ENV: test

      - image: circleci/postgres:10.10

    steps:
      - checkout
      - restore_cache:
          keys:
            - webpack-{{ .Revision }}
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: gem update --system
      - run: gem install bundler
      - run: bundle install --path vendor/bundle
      - run: sudo apt install postgresql-client
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Security checks
          command: |
              if [ $CIRCLE_NODE_INDEX = 0 ]; then
                bundle exec bundler-audit update
                bundle exec bundler-audit check
                bundle exec rubocop
              fi
      - run:
          name: Specs
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out ~/spec-timings/rspec.xml --format progress
      - store_test_results:
          path: ~/spec-timings
workflows:
  version: 2
  setup_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup
